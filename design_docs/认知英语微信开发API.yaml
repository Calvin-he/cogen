# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.1"
  title: 认知英语公众号API
  description: 学生在认知英语公众号上浏览课程，发表评论

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /users:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: Gets `User` objects.
      # This is array of GET operation parameters:
      # Expected responses for this operation:
      responses:
        # Response code
        '200':
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: ArrayOfUsers
            type: array
            items:
              $ref: '#/definitions/user'
    post:
      description: Create `User` object
      parameters:
        - name: user
          in: body
          description: create new User
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        '200':
          description: User responses
          schema:
            $ref: '#/definitions/user'
            
  /users/{id}:
    get:
      description: Gets an `User` object by user id.
      parameters:
        - name: id 
          in: path 
          description: user id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/user'
    
  /lessons:
    get:
      description: Gets `lesson` objects
      responses:
        '200':
          description: Successful response
          schema:
            title: ArrayOfLessons
            type: array
            items:
              $ref: '#/definitions/lesson'
    post:
      description: Create `lesson` object
      parameters:
        - name: lesson
          in: body
          required: true
          schema:
            $ref: '#/definitions/lesson'
      responses:
        '200':
          description: Successful responses
          schema:
            $ref: '#/definitions/lesson'

  /lessons/{id}/comments:
    get:
      description: Get `comment` objects of a lesson
      parameters:
        - name: id 
          in: path 
          required: true
          description: the lesson id
          type: integer
          format: int64
      responses:
        '200':
          description: Successful responses
          schema:
            title: ArrayOfComments
            type: array
            items:
                $ref: '#/definitions/comment'
    post:
      description: Create 'comment' object for a lesson
      parameters:
        - name: id 
          in: path 
          required: true
          description: the lesson id
          type: integer
          format: int64
        - name: comment
          in: body
          required: true
          description: new `comment` object
          schema:
            $ref: '#/definitions/comment'
      responses:
        '200':
          description: Successful responses
          schema:
            $ref: '#/definitions/comment'
              
        
        
definitions:
  user:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      gender:
        type: string
        enum:
        - male
        - female
      real_name:
        type: string
      wechat_openid:
        type: string
  
  lesson:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      url:
        type: string
        format: url
      description: 
        type: string
      num_of_viewer:
        type: integer
      num_of_comments:
        type: integer
      tags:
        type: array
        items: 
          type: string
      publish_time:
        type: string
        format: date-time
      
  comment:
    type: object
    properties:
      id:
        type: integer
        format: int64
      lesson_id:
        description: The lesson which it replies to. 
        type: integer
      content:
        type: string
      publish_time:
        type: string
        format: date-time
      num_of_votes:
        type: integer
      parent_id:
        description: if it replies to a lesson, the value is null. Else the value is the replied comment's id
        type: integer
      author_id:
        type: integer
      author_name:
        type: string
      author_avatar_url:
        type: string
        format: url
        
    
    
    
    
    